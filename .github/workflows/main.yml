name: Update Submodules and Release

on:
  schedule:
    - cron: '0 0 * * *'  # 每天00:00运行
  workflow_dispatch:  # 允许手动触发

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'
          
      - name: Check for submodule updates
        id: submod_update
        run: |
          git submodule update --progress --init --force --remote
          if [[ `git status --porcelain` ]]; then
            echo "::set-output name=updated::true"
          else
            echo "::set-output name=updated::false"
          fi

      - name: Setup Node.js (latest version)
        if: steps.submod_update.outputs.updated == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'  # 使用Node.js的最新版本

      - name: Install pnpm
        if: steps.submod_update.outputs.updated == 'true'
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 9
          
      - name: Update Localization
        if: steps.submod_update.outputs.updated == 'true'
        run: |
          cd GakumasPreTranslation
          cp .env.sample .env
          pnpm install
          pnpm ts-node main.ts
          
      - name: Get game resources
        uses: actions/checkout@v4
        with:
          repository: DreamGallery/Campus-adv-txts
          ref: main
          path: Campus_adv_txts
      
      - name: copy txt to tmp
        run: |
          mkdir ./raw
          ls
          cp -r Campus_adv_txts/Resource/adv* ./raw
          
      - name: Merge Resources
        if: steps.submod_update.outputs.updated == 'true'
        run: |
          pip install -r requirements.txt
          python merge.py

      - name: Increment version and zip files
        if: steps.submod_update.outputs.updated == 'true'
        run: |
          VERSION=$(cat version.txt | sed 's/v//')
          NEW_VERSION="v$(echo $VERSION | awk -F. '{ $NF++; printf "%d.%d.%d", $1, $2, $3 }')"
          echo "Current VERSION: $VERSION"
          echo "New VERSION: $NEW_VERSION"
          echo $NEW_VERSION > version.txt
          zip -r GakumasTranslationData.zip local-files version.txt

      
      - name: Create Release
        if: steps.submod_update.outputs.updated == 'true'
        uses: ncipollo/release-action@v1
        with:
          artifacts: GakumasTranslationData.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          body: 'New release ${{ env.NEW_VERSION }}'
          allowUpdates: true  # 允许更新现有的Release
