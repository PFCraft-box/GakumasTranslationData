name: Update and Release

on:
  schedule:
    # 每天 00:00 运行
    - cron: '0 0 * * *'
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  check_submodules_update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive  # 检查出包含所有子模块的完整仓库

      - name: Update submodules
        id: check_update
        run: |
          # 使用提供的命令来更新子模块
          git submodule update --progress --init --force --remote
          if [ -n "$(git status --porcelain)" ]; then
            echo "true" > update_needed.txt
          else
            echo "false" > update_needed.txt
          fi

      - name: Set output if update needed
        id: set_output
        run: echo "update_needed=$(cat update_needed.txt)" >> $GITHUB_OUTPUT

  update_and_release:
    runs-on: ubuntu-latest
    needs: check_submodules_update
    if: needs.check_submodules_update.outputs.update_needed == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive  # 确保再次检查出所有子模块

      - name: Install dependencies for GakumasPreTranslation
        run: |
          cd GakumasPreTranslation
          pnpm install
          pnpm ts-node main.ts

      - name: Merge resources
        run: |
          pip install -r requirements.txt
          python merge.py

      - name: Debug: List files and folders
        run: |
          echo "Current directory contents:"
          ls -la
          echo "local-files contents:"
          ls -la local-files

      - name: Increment version and prepare release
        id: increment_version
        run: |
          current_version=$(cat version.txt)
          # 假设版本格式为 v0.1.0，使用 awk 增加版本号
          new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF += 1 ; print}')
          echo $new_version > version.txt

          # 确保 local-files 目录存在并非空
          if [ ! -d "local-files" ] || [ -z "$(ls -A local-files)" ]; then
            echo "Error: 'local-files' directory is missing or empty!"
            exit 1
          fi

          # 打包 local-files 和更新后的 version.txt
          zip -r release_${new_version}.zip local-files version.txt
          
          # 设置输出以供后续步骤使用
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.increment_version.outputs.new_version }}
          release_name: Release ${{ steps.increment_version.outputs.new_version }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release_${{ steps.increment_version.outputs.new_version }}.zip
          asset_name: release_${{ steps.increment_version.outputs.new_version }}.zip
          asset_content_type: application/zip
