name: Update Submodules and Release

on:
  schedule:
    - cron: '0 0 * * *'  # 每天00:00运行

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'
          
      - name: Check for submodule updates
        id: submod_update
        run: |
          git submodule update --progress --init --force --remote
          if [[ `git status --porcelain` ]]; then
            echo "::set-output name=updated::true"
          else
            echo "::set-output name=updated::false"
          fi
      
      - name: Install Node.js and Python
        if: steps.submod_update.outputs.updated == 'true'
        uses: actions/setup-node@v2
        with:
          node-version: '16' # 选择合适的Node.js版本

      - name: Update Localization
        if: steps.submod_update.outputs.updated == 'true'
        run: |
          cd GakumasPreTranslation
          pnpm install
          pnpm ts-node main.ts
      
      - name: Merge Resources
        if: steps.submod_update.outputs.updated == 'true'
        run: |
          pip install -r requirements.txt
          python merge.py

      - name: Increment version and zip files
        if: steps.submod_update.outputs.updated == 'true'
        run: |
          VERSION=$(cat version.txt | sed 's/v//')
          NEW_VERSION="v$(echo $VERSION | awk -F. '{$NF+=1; OFS="."; print $0}')"
          echo $NEW_VERSION > version.txt
          zip -r $NEW_VERSION.zip local-files version.txt
      
      - name: Create Release
        if: steps.submod_update.outputs.updated == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          body: 'New release ${{ env.NEW_VERSION }}'
          commitish: ${{ github.sha }}
          assets_path: ./${{ env.NEW_VERSION }}.zip
